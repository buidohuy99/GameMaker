<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>maybay</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oj_maybayparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha=0;
image_speed=1/6;
fadeIn=true;
invincibility =true;
alarm[1]=room_speed*2;
playingstate='create';
friction=0.5;
alarm[2]=1;
talking_time=10;
seal=false;
for (var i=0;i&lt;array_length_1d(global.space_station);i++){
    if room==global.space_station[i] {
    state=0;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if invincibility=true {
if fadeIn=true {
if (image_alpha&lt;1){
image_alpha +=0.1;}
else {fadeIn=!fadeIn}}
else
if (image_alpha&gt;0)
{image_alpha -=0.1}
else {fadeIn=!fadeIn}}
else { image_alpha=1;}
if invincibility=true{
alarm[2]=1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>invincibility =false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_shoot</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=0;i&lt;array_length_1d(global.space_station);i++){
    if room==global.space_station[i] {
if (state==0)&amp;&amp;(x&lt;view_wview[0]/4){
    hspeed=2;
        }
if (state==0)&amp;&amp;(x=view_wview[0]/4) 
        {speed=0;
        state =1;}

if (state&gt;0)&amp;&amp;(state&lt;8){
if state==1 {
    timer=1*room_speed;
    state=2;
    }
else if (timer&lt;=0)&amp;&amp;(state==2){image_xscale =-1;
    timer=2*room_speed;
    state=3;}
else if (timer&lt;=0)&amp;&amp;(state==3) {state=4;
    image_xscale=1;
    timer=room_speed;}
else if (timer&lt;=0)&amp;&amp;(state==4){
    image_speed=0.05;
    sprite_index=sp_bewildered;
    timer=2*room_speed;
    state=5;
    }
else if (timer&lt;=0)&amp;&amp;(state==5) {state=6;
    image_speed=0.12;
    sprite_index=maybay;
    timer=1*room_speed
    } 
else if (timer&lt;=0)&amp;&amp;(state==6) {
    image_speed=0.1;
    sprite_index=sp_chat;
    state=7;
    scr_text_bubble("Fuck!#Where am I?",0.9,x,y-100);
    timer=talking_time*room_speed;
    timerspeech=5*room_speed;
    speech=0;
    }
else if (timer&lt;=0)&amp;&amp;(state==7){state=8;
    image_speed=0.12;
    sprite_index=maybay;
    global.dialogue=false;
    playingstate='wait';
    with oj_textbubbles {instance_destroy();}
    }    
    else {timer--}   ;
if (state==7)&amp;&amp;(timer&gt;0)
    {if (speech=0)&amp;&amp;(timerspeech&lt;=0){ with oj_textbubbles {instance_destroy();};
    speech=1; timerspeech=0; 
    }
    else if (speech=1)&amp;&amp;(timerspeech&lt;=0){scr_text_bubble("Hmm...#A new realm?#Possibly...",0.5,x,y-100)
    speech=2; timerspeech=5*room_speed;
    }
    else if (speech=2)&amp;&amp;(timerspeech&lt;=0) {with oj_textbubbles {instance_destroy();}}
    else {timerspeech--}}
    }

}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=0;i&lt;array_length_1d(global.space_station);i++) {
if room!=global.space_station[i] {
switch(playingstate) {
    case 'shoot':
    if sprite_index!=sp_attack {
    sprite_index=sp_attack;
    playingtimer=6;}break;
    case 'create':
    if sprite_index!=sp_playercreate{
    if global.dialogue=false{
    sprite_index=sp_playercreate;}
    playingtimer=room_speed;};break;
    case 'hit': 
    if sprite_index!=sp_hit {
    sprite_index=sp_hit;
    playingtimer=room_speed/5;
    };break;
    case 'wait':
    if sprite_index!=maybay {
    sprite_index=maybay;image_speed=2/15;};break;
}
if playingtimer&lt;=0 {
if playingstate!='wait'{
playingstate='wait'}} else{playingtimer--}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if global.dialogue=false{
//Controls
if x&lt;view_xview[0]+28 {x=view_xview[0]+28}
 if x&gt;view_wview[0]-34 {x=view_wview[0]-34}
 if y&lt;view_yview[0]+28 {y=view_yview[0]+28}
 if y&gt;view_hview[0]-28 {y=view_hview[0]-28}
//mouse controls
if global.controls=0{
x=clamp(mouse_x,view_xview[0]+26,view_wview[0]-34);
y=clamp(mouse_y,view_yview[0]+26,view_hview[0]-28);
if playingstate!='create'or playingstate!='hit'{
if mouse_check_button_pressed(mb_left){
if !instance_exists(oj_hidecontmain){
if can_shoot=1 {
    playingstate='shoot';
    can_shoot=0;
    alarm[0]=room_speed/5;
    instance_create(x+20+16,y,oj_dan);
    audio_play_sound(sound_bulletshoot,0,false)}
} }}
}
//keyboard controls
else {
 if  keyboard_check(vk_left) {
 hspeed +=-4;}
 if  keyboard_check(vk_right){
 hspeed +=8;}
 if  keyboard_check(vk_up ){
 vspeed +=-6;}
 if  keyboard_check(vk_down){
 vspeed +=6;
 }
    if speed&gt;8 {speed=8}
 if !instance_exists(oj_hidecontmain){
 if seal=false{
 if playingstate!='creare'&amp;&amp;playingstate!='hit'{
 if keyboard_check_pressed(vk_lcontrol){
 if can_shoot=1 {
    playingstate='shoot';
    can_shoot=0;
    alarm[0]=room_speed/5;
    instance_create(x+20+16,y,oj_dan);
    audio_play_sound(sound_bulletshoot,0,false)}
    }}}
    }
} }
//Check dead or alive
if (global.planehp)&lt;=0
{
    global.multiplier=1;
    lives -=1;
    instance_create(x,y,oj_maybaydie);
    if lives&gt;=0 {
    global.planehp=global.maxplanehp;}
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if oj_maybay.seal=true{
    image_speed=0.12;
    draw_sprite(sp_seal,image_index,oj_maybay.x,oj_maybay.y-18-24)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
