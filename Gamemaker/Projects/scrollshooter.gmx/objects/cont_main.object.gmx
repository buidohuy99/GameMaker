<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if global.save=true {scr_load_game();}
//else
//{
score = 0;
global.planehp = 200;
global.maxplanehp = 200;
global.cash = 0;
global.maxcash = 2147483647;
global.controls =0;
global.damage =999;
global.multiplier =1;
global.dialogue=false;
lives=0;
//}
//spacestation
global.space_station[0]=SpaceStation1;
//global.space_station[1]=SpaceStation2;
//spawn plane
instance_create(view_wview[0]/5,view_hview[0]/2,oj_maybay);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//sfdsfs
if global.cash &gt; global.maxcash {
global.cash=global.maxcash;}
if keyboard_check_pressed(ord('C'))
{global.controls +=1}
if global.controls&gt;1 {global.controls=0;}
if global.damage&gt;999 {global.damage=999}
if keyboard_check_pressed(ord('S')) {if instance_exists(oj_inventory){
var found=false;
for (var iyy=0;iyy&lt;6&amp;&amp;found=false;iyy++){
    for (var ixx=0;ixx&lt;4&amp;&amp;found=false;ixx++){
        if oj_inventory.invt[ixx,iyy]=-1 || oj_inventory.invt[ixx,iyy]=13 {
        found=true;
        oj_inventory.invt[ixx,iyy]=13;
        oj_inventory.invt_num[ixx,iyy]++;
        } 
    }}
}}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check pop-up Store
if instance_exists(oj_hidecontmain) or instance_exists(oj_screen_fade) {exit}
//Draw HealthBar Boss
if instance_exists(spwn6x6stirge){
for (i=0;i&lt;array_length_1d(spwn6x6stirge.enemy_type_boss);i++) {
    if instance_exists(spwn6x6stirge.enemy_type_boss[i]) {
    draw_sprite_stretched(sp_background,0,view_xview[0]+22+704,view_yview[0]+64-12,400,21);
    if spwn6x6stirge.enemy_type_boss[i].hp&gt;=0 {
    draw_sprite_stretched_ext(sp_bhealth,0,view_xview[0]+22+704+10,view_yview[0]+64-12+5,(400*199/209)*(spwn6x6stirge.enemy_type_boss[i].hp/spwn6x6stirge.enemy_type_boss[i].maxhp),11,c_white,1);
    }
    draw_sprite(sp_bossicon,0,view_xview[0]+704,view_yview[0]+64);
    draw_sprite(spwn6x6stirge.enemy_type_boss[i].icon,0,view_xview[0]+704,view_yview[0]+64);
    }}}
//Draw ScoreBoard
if instance_exists(oj_maybay){
if oj_maybay.y &lt;136
{draw_sprite_ext(sp_topleft,1,0,0,1,1,0,c_white,0.5)} else {draw_sprite(sp_topleft,1,0,0)}} else {draw_sprite(sp_topleft,1,0,0)}
//Draw Health
draw_sprite(sp_healthbarbg,1,view_xview[0]+46,view_yview[0]+34);
if global.planehp &gt;=0 
{
draw_sprite_ext(sp_healthbarinner,image_index,view_xview[0]+46,view_yview[0]+34,(global.planehp)/global.maxplanehp,1,0,c_white,1);
}
draw_sprite(sp_healthbarborder,1,view_xview[0]+15,view_yview[0]+15);
//Draw Money
draw_sprite(sp_moneybar,0,view_xview[0]+250,view_yview[0]+10);

//Draw Text over health
draw_set_color(c_white);
draw_set_valign(fa_middle);
draw_set_halign(fa_center);
draw_set_font(font_ui_money);
if global.planehp &gt;= 0 {
draw_text(view_xview[0]+137,view_yview[0]+25,string(round((global.planehp/global.maxplanehp)*100)) + ' % of Max HP');
} else {
draw_text(view_xview[0]+137,view_yview[0]+25,'0 % of Max HP');
}

//Draw Text Money
draw_set_color(c_yellow);
draw_set_valign(fa_middle);
draw_set_halign(fa_right);
draw_set_font(font_ui_money);
draw_text(view_xview[0]+467,view_yview[0]+35,"VND " + string_thousands(round(global.cash)));

//Draw Control Type
draw_set_font(font_ui_money);
draw_set_color(c_aqua);
draw_set_valign(fa_middle);
draw_set_halign(fa_left);
draw_text(view_wview[0]-250,view_yview[0]+15, 'Input type :')
if global.controls=0 {draw_text(view_wview[0]-115,view_yview[0]+15,'Mouse')}
else {draw_text(view_wview[0]-115,view_yview[0]+15,'Keyboard')}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
